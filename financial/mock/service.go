// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_financial is a generated GoMock package.
package mock_financial

import (
	os "os"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	financial "github.com/luisfelipegodoi/capital-gains/financial"
)

// MockCapitalGains is a mock of CapitalGains interface.
type MockCapitalGains struct {
	ctrl     *gomock.Controller
	recorder *MockCapitalGainsMockRecorder
}

// MockCapitalGainsMockRecorder is the mock recorder for MockCapitalGains.
type MockCapitalGainsMockRecorder struct {
	mock *MockCapitalGains
}

// NewMockCapitalGains creates a new mock instance.
func NewMockCapitalGains(ctrl *gomock.Controller) *MockCapitalGains {
	mock := &MockCapitalGains{ctrl: ctrl}
	mock.recorder = &MockCapitalGainsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCapitalGains) EXPECT() *MockCapitalGainsMockRecorder {
	return m.recorder
}

// CalculateCapitalGains mocks base method.
func (m *MockCapitalGains) CalculateCapitalGains(operationList *os.File) ([]financial.Fee, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CalculateCapitalGains", operationList)
	ret0, _ := ret[0].([]financial.Fee)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CalculateCapitalGains indicates an expected call of CalculateCapitalGains.
func (mr *MockCapitalGainsMockRecorder) CalculateCapitalGains(operationList interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CalculateCapitalGains", reflect.TypeOf((*MockCapitalGains)(nil).CalculateCapitalGains), operationList)
}
